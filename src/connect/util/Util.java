// Generated by Haxe 4.0.5
package connect.util;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Util extends haxe.lang.HxObject
{
	public Util(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Util()
	{
		//line 9 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		connect.util.Util.__hx_ctor_connect_util_Util(this);
	}
	
	
	protected static void __hx_ctor_connect_util_Util(connect.util.Util __hx_this)
	{
	}
	
	
	public static java.lang.String beautify(java.lang.String text, boolean compact)
	{
		//line 18 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		try 
		{
			//line 18 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			return connect.util.Util.beautifyObject(new haxe.format.JsonParser(haxe.lang.Runtime.toString(text)).doParse(), compact);
		}
		catch (java.lang.Throwable catchallException)
		{
			//line 17 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			haxe.lang.Exceptions.setException(catchallException);
			//line 20 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			java.lang.Object ex = ( (haxe.root.Std.is(catchallException, haxe.lang.HaxeException.class)) ? (((haxe.lang.HaxeException) (catchallException) ).obj) : (catchallException) );
			//line 20 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			return text;
		}
		
		
	}
	
	
	public static java.lang.String beautifyObject(java.lang.Object obj, boolean compact)
	{
		//line 31 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		if (compact) 
		{
			//line 32 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			if (( haxe.root.Type.typeof(obj) == haxe.root.ValueType.TObject )) 
			{
				//line 34 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				if (haxe.root.Reflect.hasField(obj, "id")) 
				{
					//line 35 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
					return haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(obj, "id", true));
				}
				else
				{
					//line 37 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
					return ( ( "{ " + haxe.root.Reflect.fields(obj).join(", ") ) + " }" );
				}
				
			}
			else
			{
				//line 41 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				haxe.root.Array arr = ((haxe.root.Array) (obj) );
				//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				haxe.root.Array<java.lang.String> ret = ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (haxe.root.Array.alloc(((int) (arr.length) ))) )) );
				//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				{
					//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
					int _g = 0;
					//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
					int _g1 = arr.length;
					//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
					while (( _g < _g1 ))
					{
						//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
						int i = _g++;
						//line 43 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
						java.lang.Object el = ((java.lang.Object) (arr.__get(i)) );
						//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
						ret.__set(i, ( (haxe.root.Reflect.hasField(el, "id")) ? (haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(el, "id", true))) : (( (( haxe.root.Type.typeof(el) == haxe.root.ValueType.TObject )) ? (( ( "{ " + haxe.root.Reflect.fields(el).join(", ") ) + " }" )) : (haxe.root.Std.string(el)) )) ));
					}
					
				}
				
				//line 42 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				haxe.root.Array<java.lang.String> mapped = ret;
				//line 49 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				haxe.lang.Function replacer = null;
				//line 49 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				return haxe.format.JsonPrinter.print(((java.lang.Object) (mapped) ), replacer, "  ");
			}
			
		}
		else
		{
			//line 52 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			haxe.lang.Function replacer1 = null;
			//line 52 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			return haxe.format.JsonPrinter.print(obj, replacer1, "  ");
		}
		
	}
	
	
	public static boolean isJson(java.lang.String text)
	{
		//line 62 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		if ( ! (connect.util.Util.isJsonObject(text)) ) 
		{
			//line 62 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			return connect.util.Util.isJsonArray(text);
		}
		else
		{
			//line 62 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			return true;
		}
		
	}
	
	
	public static boolean isJsonObject(java.lang.String text)
	{
		//line 71 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		return haxe.lang.Runtime.valEq(haxe.lang.StringExt.charAt(((java.lang.String) (((java.lang.Object) (text) )) ).trim(), 0), "{");
	}
	
	
	public static boolean isJsonArray(java.lang.String text)
	{
		//line 80 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		return haxe.lang.Runtime.valEq(haxe.lang.StringExt.charAt(((java.lang.String) (((java.lang.Object) (text) )) ).trim(), 0), "[");
	}
	
	
	public static java.lang.Object createObjectDiff(java.lang.Object object, java.lang.Object previous)
	{
		//line 94 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		java.lang.Object __temp_stmt3 = null;
		//line 94 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		{
			//line 94 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			java.lang.Object __temp_odecl1 = haxe.lang.Runtime.getField(object, "id", true);
			//line 94 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			__temp_stmt3 = new haxe.lang.DynamicObject(new java.lang.String[]{"id"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{}, new double[]{});
		}
		
		//line 94 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		connect.util.Diff __temp_stmt4 = new connect.util.Diff(previous, object);
		//line 94 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		java.lang.Object __temp_stmt2 = __temp_stmt4.apply(__temp_stmt3);
		//line 93 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		return connect.util.Util.addIdsToObject(__temp_stmt2, previous);
	}
	
	
	public static boolean isArray(java.lang.Object value)
	{
		//line 100 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		return ( value instanceof haxe.root.Array );
	}
	
	
	public static boolean isStruct(java.lang.Object value)
	{
		//line 105 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		return ( haxe.root.Type.typeof(value) == haxe.root.ValueType.TObject );
	}
	
	
	public static java.lang.Object addIdsToObject(java.lang.Object object, java.lang.Object original)
	{
		//line 118 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		java.lang.Object out = new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{});
		//line 119 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		java.lang.String id = "id";
		//line 120 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		if ((  ! (haxe.root.Reflect.hasField(object, id))  && haxe.root.Reflect.hasField(original, id) )) 
		{
			//line 121 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			java.lang.Object tmp = haxe.root.Reflect.field(original, id);
			//line 121 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			haxe.root.Reflect.setField(out, id, tmp);
		}
		
		//line 123 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		haxe.root.Lambda.iter(((java.lang.Object) (haxe.root.Reflect.fields(object)) ), ((haxe.lang.Function) (new connect.util.Util_addIdsToObject_123__Fun(out, original, object)) ));
		//line 123 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		java.lang.Object __temp_expr1 = ((java.lang.Object) (null) );
		//line 138 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		return out;
	}
	
	
	public static haxe.root.Array compactArray(haxe.root.Array array, haxe.root.Array second)
	{
		//line 151 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		haxe.root.Array<haxe.root.Array> out = new haxe.root.Array<haxe.root.Array>(new haxe.root.Array[]{});
		//line 152 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		{
			//line 152 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			int _g = 0;
			//line 152 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			int _g1 = array.length;
			//line 152 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
			while (( _g < _g1 ))
			{
				//line 152 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				int i = _g++;
				//line 153 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				haxe.root.Array value = ((haxe.root.Array) (array.__get(i)) );
				//line 154 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				haxe.root.Array secondValue = ((haxe.root.Array) (second.__get(i)) );
				//line 155 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
				if (( connect.util.Util.isStruct(value) && connect.util.Util.isStruct(secondValue) )) 
				{
					//line 156 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
					out.push(((haxe.root.Array) (connect.util.Util.addIdsToObject(value, secondValue)) ));
				}
				else
				{
					//line 157 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
					if (( connect.util.Util.isArray(value) && connect.util.Util.isArray(secondValue) )) 
					{
						//line 158 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
						out.push(connect.util.Util.compactArray(value, secondValue));
					}
					else
					{
						//line 159 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
						if (( value != null )) 
						{
							//line 160 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
							out.push(value);
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 163 "/home/travis/build/JaviCerveraIngram/connect-haxe-sdk/connect/util/Util.hx"
		return ((haxe.root.Array) (out) );
	}
	
	
}


