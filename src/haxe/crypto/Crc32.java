// Generated by Haxe 4.0.5
package haxe.crypto;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Crc32 extends haxe.lang.HxObject
{
	public Crc32(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Crc32()
	{
		//line 31 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		haxe.crypto.Crc32.__hx_ctor_haxe_crypto_Crc32(this);
	}
	
	
	protected static void __hx_ctor_haxe_crypto_Crc32(haxe.crypto.Crc32 __hx_this)
	{
		//line 32 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		__hx_this.crc = -1;
	}
	
	
	public static int make(haxe.io.Bytes data)
	{
		//line 60 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		int c_crc = -1;
		//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			byte[] b = data.b;
			//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			{
				//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				int _g = 0;
				//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				int _g1 = data.length;
				//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				while (( _g < _g1 ))
				{
					//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					int i = _g++;
					//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					int tmp = ( (( c_crc ^ ( b[i] & 255 ) )) & 255 );
					//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					{
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
						//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					}
					
					//line 61 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					c_crc = ( ( c_crc >>> 8 ) ^ tmp );
				}
				
			}
			
		}
		
		//line 62 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		return ( c_crc ^ -1 );
	}
	
	
	public int crc;
	
	public final void _byte(int b)
	{
		//line 36 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		int tmp = ( (( this.crc ^ b )) & 255 );
		//line 37 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
			//line 38 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
		}
		
		//line 39 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		this.crc = ( ( this.crc >>> 8 ) ^ tmp );
	}
	
	
	public final void update(haxe.io.Bytes b, int pos, int len)
	{
		//line 43 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		byte[] b1 = b.b;
		//line 44 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 44 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			int _g = pos;
			//line 44 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			int _g1 = ( pos + len );
			//line 44 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			while (( _g < _g1 ))
			{
				//line 44 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				int i = _g++;
				//line 45 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				int tmp = ( (( this.crc ^ ( b1[i] & 255 ) )) & 255 );
				//line 46 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				{
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
					//line 47 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
					tmp = ( ( tmp >>> 1 ) ^ (  - ((( tmp & 1 )))  & -306674912 ) );
				}
				
				//line 48 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				this.crc = ( ( this.crc >>> 8 ) ^ tmp );
			}
			
		}
		
	}
	
	
	public final int get()
	{
		//line 53 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		return ( this.crc ^ -1 );
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			boolean __temp_executeDef1 = true;
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (( field != null )) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				switch (field.hashCode())
				{
					case 98772:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("crc")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							this.crc = ((int) (value) );
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return value;
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (__temp_executeDef1) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			boolean __temp_executeDef1 = true;
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (( field != null )) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				switch (field.hashCode())
				{
					case 98772:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("crc")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							this.crc = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return value;
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (__temp_executeDef1) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			boolean __temp_executeDef1 = true;
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (( field != null )) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				switch (field.hashCode())
				{
					case 102230:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("get")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "get")) );
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
					case 98772:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("crc")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return this.crc;
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
					case -838846263:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("update")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "update")) );
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
					case 3039496:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("byte")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "byte")) );
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (__temp_executeDef1) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			boolean __temp_executeDef1 = true;
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (( field != null )) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				switch (field.hashCode())
				{
					case 98772:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("crc")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return ((double) (this.crc) );
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (__temp_executeDef1) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		{
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			boolean __temp_executeDef1 = true;
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (( field != null )) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				switch (field.hashCode())
				{
					case 102230:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("get")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							return this.get();
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
					case 3039496:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("byte")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							this._byte(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
					case -838846263:
					{
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						if (field.equals("update")) 
						{
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							__temp_executeDef1 = false;
							//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
							this.update(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[2])) ));
						}
						
						//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
			if (__temp_executeDef1) 
			{
				//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		baseArr.push("crc");
		//line 28 "/home/travis/haxe/std/haxe/crypto/Crc32.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


