// Generated by Haxe 4.0.5
package haxe.zip;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Compress extends haxe.lang.HxObject
{
	public Compress(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Compress(int level)
	{
		//line 32 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		haxe.zip.Compress.__hx_ctor_haxe_zip_Compress(this, level);
	}
	
	
	protected static void __hx_ctor_haxe_zip_Compress(haxe.zip.Compress __hx_this, int level)
	{
		//line 30 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		__hx_this.finish = false;
		//line 33 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		{
			//line 33 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			throw haxe.lang.HaxeException.wrap("Not implemented for this platform");
		}
		
	}
	
	
	public static haxe.io.Bytes run(haxe.io.Bytes s, int level)
	{
		//line 69 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		try 
		{
			//line 70 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			java.util.zip.Deflater deflater = new java.util.zip.Deflater(level);
			//line 71 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			deflater.setInput(((byte[]) (s.b) ));
			//line 72 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			java.io.ByteArrayOutputStream outputStream = new java.io.ByteArrayOutputStream(s.length);
			//line 73 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			deflater.finish();
			//line 74 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			byte[] buffer = haxe.io.Bytes.alloc(1024).b;
			//line 75 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			while ( ! (deflater.finished()) )
			{
				//line 76 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				int count = deflater.deflate(((byte[]) (buffer) ));
				//line 77 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				outputStream.write(((byte[]) (buffer) ), ((int) (0) ), ((int) (count) ));
			}
			
			//line 79 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			outputStream.close();
			//line 80 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			return haxe.io.Bytes.ofData(outputStream.toByteArray());
		}
		catch (java.lang.Throwable typedException)
		{
			//line 69 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			throw haxe.lang.HaxeException.wrap(typedException);
		}
		
		
	}
	
	
	public java.util.zip.Deflater deflater;
	
	public int mode;
	
	public boolean finish;
	
	public java.lang.Object execute(haxe.io.Bytes src, int srcPos, haxe.io.Bytes dst, int dstPos)
	{
		//line 39 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		this.deflater.setInput(((byte[]) (src.b) ), ((int) (srcPos) ), ((int) (( src.length - srcPos )) ));
		//line 40 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		if (this.finish) 
		{
			//line 41 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			this.deflater.finish();
		}
		
		//line 42 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		this.finish = false;
		//line 44 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		int written = this.deflater.deflate(((byte[]) (dst.b) ), ((int) (dstPos) ), ((int) (( dst.length - dstPos )) ));
		//line 45 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		int read = this.deflater.getTotalIn();
		//line 46 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		{
			//line 46 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			boolean __temp_odecl1 = this.deflater.finished();
			//line 46 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"done"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{"read", "write"}, new double[]{((double) (((double) (read) )) ), ((double) (((double) (written) )) )});
		}
		
	}
	
	
	public void setFlushMode(haxe.zip.FlushMode f)
	{
		//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		int tmp = 0;
		//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		switch (f)
		{
			case NO:
			{
				//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				tmp = java.util.zip.Deflater.NO_FLUSH;
				//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				break;
			}
			
			
			case SYNC:
			{
				//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				tmp = java.util.zip.Deflater.SYNC_FLUSH;
				//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				break;
			}
			
			
			case FULL:
			{
				//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				tmp = java.util.zip.Deflater.FULL_FLUSH;
				//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				break;
			}
			
			
			case FINISH:
			{
				//line 58 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				this.finish = true;
				//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				tmp = java.util.zip.Deflater.FULL_FLUSH;
				//line 57 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				break;
			}
			
			
			case BLOCK:
			{
				//line 61 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				throw haxe.lang.HaxeException.wrap("Not Implemented");
			}
			
			
		}
		
		//line 50 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		this.mode = tmp;
	}
	
	
	public void close()
	{
		//line 66 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		this.deflater.end();
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		{
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (( field != null )) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				switch (field.hashCode())
				{
					case 3357091:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("mode")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							this.mode = ((int) (value) );
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return value;
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		{
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (( field != null )) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				switch (field.hashCode())
				{
					case -1274442605:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("finish")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							this.finish = haxe.lang.Runtime.toBool(((java.lang.Boolean) (value) ));
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return value;
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case 653851047:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("deflater")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							this.deflater = ((java.util.zip.Deflater) (value) );
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return value;
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case 3357091:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("mode")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							this.mode = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return value;
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		{
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (( field != null )) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				switch (field.hashCode())
				{
					case 94756344:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("close")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "close")) );
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case 653851047:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("deflater")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return this.deflater;
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case 962132101:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("setFlushMode")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setFlushMode")) );
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case 3357091:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("mode")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return this.mode;
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case -1319569547:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("execute")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "execute")) );
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case -1274442605:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("finish")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return this.finish;
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		{
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (( field != null )) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				switch (field.hashCode())
				{
					case 3357091:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("mode")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return ((double) (this.mode) );
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		{
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			boolean __temp_executeDef1 = true;
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (( field != null )) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				switch (field.hashCode())
				{
					case 94756344:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("close")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							this.close();
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case -1319569547:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("execute")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							return this.execute(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((haxe.io.Bytes) (dynargs[2]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[3])) ));
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
					case 962132101:
					{
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						if (field.equals("setFlushMode")) 
						{
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							__temp_executeDef1 = false;
							//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
							this.setFlushMode(((haxe.zip.FlushMode) (dynargs[0]) ));
						}
						
						//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
			if (__temp_executeDef1) 
			{
				//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		baseArr.push("finish");
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		baseArr.push("mode");
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		baseArr.push("deflater");
		//line 27 "/home/travis/haxe/std/java/_std/haxe/zip/Compress.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


