// Generated by Haxe 4.0.5
package haxe.zip;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Tools extends haxe.lang.HxObject
{
	public Tools(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Tools()
	{
		//line 25 "/home/travis/haxe/std/haxe/zip/Tools.hx"
		haxe.zip.Tools.__hx_ctor_haxe_zip_Tools(this);
	}
	
	
	protected static void __hx_ctor_haxe_zip_Tools(haxe.zip.Tools __hx_this)
	{
	}
	
	
	public static void compress(java.lang.Object f, int level)
	{
		//line 27 "/home/travis/haxe/std/haxe/zip/Tools.hx"
		if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.getField(f, "compressed", true)) ))) 
		{
			//line 28 "/home/travis/haxe/std/haxe/zip/Tools.hx"
			return ;
		}
		
		//line 32 "/home/travis/haxe/std/haxe/zip/Tools.hx"
		haxe.io.Bytes data = haxe.zip.Compress.run(((haxe.io.Bytes) (haxe.lang.Runtime.getField(f, "data", true)) ), level);
		//line 33 "/home/travis/haxe/std/haxe/zip/Tools.hx"
		boolean __temp_expr1 = haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.setField(f, "compressed", true)) ));
		//line 34 "/home/travis/haxe/std/haxe/zip/Tools.hx"
		haxe.io.Bytes __temp_expr2 = ((haxe.io.Bytes) (haxe.lang.Runtime.setField(f, "data", data.sub(2, ( data.length - 6 )))) );
		//line 35 "/home/travis/haxe/std/haxe/zip/Tools.hx"
		int __temp_expr3 = ((int) (haxe.lang.Runtime.setField_f(f, "dataSize", ((double) (((haxe.io.Bytes) (haxe.lang.Runtime.getField(f, "data", true)) ).length) ))) );
	}
	
	
}


