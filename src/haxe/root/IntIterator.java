// Generated by Haxe 4.0.5
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class IntIterator extends haxe.lang.HxObject
{
	public IntIterator(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public IntIterator(int min, int max)
	{
		//line 45 "/home/travis/haxe/std/IntIterator.hx"
		haxe.root.IntIterator.__hx_ctor__IntIterator(this, min, max);
	}
	
	
	protected static void __hx_ctor__IntIterator(haxe.root.IntIterator __hx_this, int min, int max)
	{
		//line 46 "/home/travis/haxe/std/IntIterator.hx"
		__hx_this.min = min;
		//line 47 "/home/travis/haxe/std/IntIterator.hx"
		__hx_this.max = max;
	}
	
	
	public int min;
	
	public int max;
	
	public final boolean hasNext()
	{
		//line 54 "/home/travis/haxe/std/IntIterator.hx"
		return ( this.min < this.max );
	}
	
	
	public final int next()
	{
		//line 63 "/home/travis/haxe/std/IntIterator.hx"
		return this.min++;
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		{
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (( field != null )) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				switch (field.hashCode())
				{
					case 107876:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("max")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							this.max = ((int) (value) );
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return value;
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
					case 108114:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("min")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							this.min = ((int) (value) );
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return value;
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		{
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (( field != null )) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				switch (field.hashCode())
				{
					case 107876:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("max")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							this.max = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return value;
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
					case 108114:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("min")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							this.min = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return value;
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		{
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (( field != null )) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("next")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "next")) );
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
					case 108114:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("min")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return this.min;
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("hasNext")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hasNext")) );
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
					case 107876:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("max")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return this.max;
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		{
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (( field != null )) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				switch (field.hashCode())
				{
					case 107876:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("max")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return ((double) (this.max) );
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
					case 108114:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("min")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return ((double) (this.min) );
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		{
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (( field != null )) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("next")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return this.next();
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						if (field.equals("hasNext")) 
						{
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							__temp_executeDef1 = false;
							//line 36 "/home/travis/haxe/std/IntIterator.hx"
							return this.hasNext();
						}
						
						//line 36 "/home/travis/haxe/std/IntIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 36 "/home/travis/haxe/std/IntIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 36 "/home/travis/haxe/std/IntIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		baseArr.push("max");
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		baseArr.push("min");
		//line 36 "/home/travis/haxe/std/IntIterator.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


