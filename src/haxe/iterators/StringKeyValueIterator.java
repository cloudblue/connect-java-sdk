// Generated by Haxe 4.0.5
package haxe.iterators;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class StringKeyValueIterator extends haxe.lang.HxObject
{
	public StringKeyValueIterator(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public StringKeyValueIterator(java.lang.String s)
	{
		//line 38 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		haxe.iterators.StringKeyValueIterator.__hx_ctor_haxe_iterators_StringKeyValueIterator(this, s);
	}
	
	
	protected static void __hx_ctor_haxe_iterators_StringKeyValueIterator(haxe.iterators.StringKeyValueIterator __hx_this, java.lang.String s)
	{
		//line 32 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		__hx_this.offset = 0;
		//line 39 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		{
			//line 39 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			__hx_this.s = s;
		}
		
	}
	
	
	public int offset;
	
	public java.lang.String s;
	
	public final boolean hasNext()
	{
		//line 46 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		return ( this.offset < this.s.length() );
	}
	
	
	public final java.lang.Object next()
	{
		//line 53 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		int tmp = this.offset;
		//line 53 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		java.lang.String s = this.s;
		//line 53 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		int index = this.offset++;
		//line 53 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		{
			//line 53 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			int __temp_odecl1 = ( (( index < s.length() )) ? (((int) (((java.lang.String) (((java.lang.Object) (s) )) ).charAt(index)) )) : (-1) );
			//line 53 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"key", "value"}, new double[]{((double) (((double) (tmp) )) ), ((double) (((double) (__temp_odecl1) )) )});
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		{
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case -1019779949:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("offset")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							this.offset = ((int) (value) );
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return value;
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		{
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 115:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("s")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							this.s = haxe.lang.Runtime.toString(value);
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return value;
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
					case -1019779949:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("offset")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							this.offset = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return value;
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		{
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("next")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "next")) );
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
					case -1019779949:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("offset")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return this.offset;
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("hasNext")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hasNext")) );
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
					case 115:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("s")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return this.s;
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		{
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case -1019779949:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("offset")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return ((double) (this.offset) );
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		{
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			boolean __temp_executeDef1 = true;
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (( field != null )) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("next")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return this.next();
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						if (field.equals("hasNext")) 
						{
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							__temp_executeDef1 = false;
							//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
							return this.hasNext();
						}
						
						//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
			if (__temp_executeDef1) 
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		baseArr.push("s");
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		baseArr.push("offset");
		//line 31 "/home/travis/haxe/std/haxe/iterators/StringKeyValueIterator.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


