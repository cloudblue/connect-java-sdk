// Generated by Haxe 4.0.5
package haxe.ds._List;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ListIterator<T> extends haxe.lang.HxObject
{
	public ListIterator(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public ListIterator(haxe.ds._List.ListNode<T> head)
	{
		//line 280 "/home/travis/haxe/std/haxe/ds/List.hx"
		haxe.ds._List.ListIterator.__hx_ctor_haxe_ds__List_ListIterator(((haxe.ds._List.ListIterator<T>) (this) ), ((haxe.ds._List.ListNode<T>) (head) ));
		//line 280 "/home/travis/haxe/std/haxe/ds/List.hx"
		java.lang.Object __temp_expr1 = ((java.lang.Object) (null) );
	}
	
	
	protected static <T_c> void __hx_ctor_haxe_ds__List_ListIterator(haxe.ds._List.ListIterator<T_c> __hx_this, haxe.ds._List.ListNode<T_c> head)
	{
		//line 281 "/home/travis/haxe/std/haxe/ds/List.hx"
		__hx_this.head = head;
	}
	
	
	public haxe.ds._List.ListNode<T> head;
	
	public final boolean hasNext()
	{
		//line 285 "/home/travis/haxe/std/haxe/ds/List.hx"
		return ( this.head != null );
	}
	
	
	public final T next()
	{
		//line 289 "/home/travis/haxe/std/haxe/ds/List.hx"
		T val = this.head.item;
		//line 290 "/home/travis/haxe/std/haxe/ds/List.hx"
		this.head = this.head.next;
		//line 291 "/home/travis/haxe/std/haxe/ds/List.hx"
		return val;
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
		{
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			boolean __temp_executeDef1 = true;
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			if (( field != null )) 
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				switch (field.hashCode())
				{
					case 3198432:
					{
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						if (field.equals("head")) 
						{
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							__temp_executeDef1 = false;
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							this.head = ((haxe.ds._List.ListNode<T>) (value) );
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							return value;
						}
						
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			if (__temp_executeDef1) 
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
		{
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			boolean __temp_executeDef1 = true;
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			if (( field != null )) 
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						if (field.equals("next")) 
						{
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							__temp_executeDef1 = false;
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "next")) );
						}
						
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						break;
					}
					
					
					case 3198432:
					{
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						if (field.equals("head")) 
						{
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							__temp_executeDef1 = false;
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							return this.head;
						}
						
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						if (field.equals("hasNext")) 
						{
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							__temp_executeDef1 = false;
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "hasNext")) );
						}
						
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			if (__temp_executeDef1) 
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
		{
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			boolean __temp_executeDef1 = true;
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			if (( field != null )) 
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				switch (field.hashCode())
				{
					case 3377907:
					{
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						if (field.equals("next")) 
						{
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							__temp_executeDef1 = false;
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							return this.next();
						}
						
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						break;
					}
					
					
					case 696759469:
					{
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						if (field.equals("hasNext")) 
						{
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							__temp_executeDef1 = false;
							//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
							return this.hasNext();
						}
						
						//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
			if (__temp_executeDef1) 
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
		baseArr.push("head");
		//line 277 "/home/travis/haxe/std/haxe/ds/List.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


