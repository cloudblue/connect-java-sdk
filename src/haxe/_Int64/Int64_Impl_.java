// Generated by Haxe 4.0.5
package haxe._Int64;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Int64_Impl_
{
	public static long make(int high, int low)
	{
		//line 37 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		long this1 = ((long) (( ((long) (( ((long) (high) ) << 32 )) ) | ((long) (( ((long) (low) ) & ((long) (0xffffffffL) ) )) ) )) );
		//line 37 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (this1) );
	}
	
	
	public static long _new(long x)
	{
		//line 40 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		long this1 = x;
		//line 40 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (this1) );
	}
	
	
	
	
	public static long get_val(long this1)
	{
		//line 46 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return this1;
	}
	
	
	public static long set_val(long this1, long x)
	{
		//line 49 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		this1 = x;
		//line 49 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return this1;
	}
	
	
	
	
	public static int get_high(long this1)
	{
		//line 54 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((int) (((long) (( this1 >> 32 )) )) );
	}
	
	
	
	
	public static int get_low(long this1)
	{
		//line 59 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((int) (this1) );
	}
	
	
	public static long copy(long this1)
	{
		//line 62 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		long this2 = this1;
		//line 62 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (this2) );
	}
	
	
	public static long ofInt(int x)
	{
		//line 65 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (x) );
	}
	
	
	public static boolean is(java.lang.Object val)
	{
		//line 68 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( val instanceof java.lang.Long );
	}
	
	
	public static int toInt(long x)
	{
		//line 71 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		if (( haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (x) ) < -2147483648 )) )) || haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (x) ) > 2147483647 )) )) )) 
		{
			//line 72 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
			throw haxe.lang.HaxeException.wrap("Overflow");
		}
		
		//line 73 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((int) (((long) (x) )) );
	}
	
	
	public static int getHigh(long x)
	{
		//line 77 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((int) (((long) (( ((long) (x) ) >> 32 )) )) );
	}
	
	
	public static int getLow(long x)
	{
		//line 80 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((int) (((long) (x) )) );
	}
	
	
	public static boolean isNeg(long x)
	{
		//line 83 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (x) ) < 0 )) ));
	}
	
	
	public static boolean isZero(long x)
	{
		//line 86 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( ((long) (x) ) == 0 );
	}
	
	
	public static int compare(long a, long b)
	{
		//line 89 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) < ((long) (b) ) )) ))) 
		{
			//line 90 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
			return -1;
		}
		
		//line 91 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) > ((long) (b) ) )) ))) 
		{
			//line 92 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
			return 1;
		}
		
		//line 93 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return 0;
	}
	
	
	public static int ucompare(long a, long b)
	{
		//line 97 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) < 0 )) ))) 
		{
			//line 98 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
			if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (b) ) < 0 )) ))) 
			{
				//line 98 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
				if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) < ((long) (b) ) )) ))) 
				{
					//line 98 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
					return -1;
				}
				else
				{
					//line 98 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
					if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) > ((long) (b) ) )) ))) 
					{
						//line 98 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
						return 1;
					}
					else
					{
						//line 98 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
						return 0;
					}
					
				}
				
			}
			else
			{
				//line 98 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
				return 1;
			}
			
		}
		
		//line 99 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (b) ) < 0 )) ))) 
		{
			//line 99 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
			return -1;
		}
		else
		{
			//line 99 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
			if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) < ((long) (b) ) )) ))) 
			{
				//line 99 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
				return -1;
			}
			else
			{
				//line 99 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
				if (haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) > ((long) (b) ) )) ))) 
				{
					//line 99 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
					return 1;
				}
				else
				{
					//line 99 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
					return 0;
				}
				
			}
			
		}
		
	}
	
	
	public static java.lang.String toStr(long x)
	{
		//line 103 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( "" + haxe.root.Std.string(((long) (x) )) );
	}
	
	
	public static java.lang.Object divMod(long dividend, long divisor)
	{
		//line 106 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return new haxe.lang.DynamicObject(new java.lang.String[]{"modulus", "quotient"}, new java.lang.Object[]{((long) (( ((long) (dividend) ) % ((long) (divisor) ) )) ), ((long) (( ((long) (dividend) ) / ((long) (divisor) ) )) )}, new java.lang.String[]{}, new double[]{});
	}
	
	
	public static java.lang.String toString(long this1)
	{
		//line 109 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( "" + haxe.root.Std.string(this1) );
	}
	
	
	public static long parseString(java.lang.String sParam)
	{
		//line 113 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.Int64Helper.parseString(sParam);
	}
	
	
	public static long fromFloat(double f)
	{
		//line 117 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.Int64Helper.fromFloat(f);
	}
	
	
	public static long neg(long x)
	{
		//line 121 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return  - (((long) (x) )) ;
	}
	
	
	public static long preIncrement(long this1)
	{
		//line 124 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		this1 += ((long) (1) );
		//line 124 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return this1;
	}
	
	
	public static long postIncrement(long this1)
	{
		//line 127 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		this1 += ((long) (1) );
		//line 127 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( this1 - 1 );
	}
	
	
	public static long preDecrement(long this1)
	{
		//line 130 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		this1 -= ((long) (1) );
		//line 130 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return this1;
	}
	
	
	public static long postDecrement(long this1)
	{
		//line 133 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		this1 -= ((long) (1) );
		//line 133 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( this1 + 1 );
	}
	
	
	public static long add(long a, long b)
	{
		//line 136 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) + ((long) (b) ) )) );
	}
	
	
	public static long addInt(long a, int b)
	{
		//line 139 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) + b )) );
	}
	
	
	public static long sub(long a, long b)
	{
		//line 142 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) - ((long) (b) ) )) );
	}
	
	
	public static long subInt(long a, int b)
	{
		//line 145 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) - b )) );
	}
	
	
	public static long intSub(int a, long b)
	{
		//line 148 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( a - ((long) (b) ) )) );
	}
	
	
	public static long mul(long a, long b)
	{
		//line 151 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) * ((long) (b) ) )) );
	}
	
	
	public static long mulInt(long a, int b)
	{
		//line 154 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) * b )) );
	}
	
	
	public static long div(long a, long b)
	{
		//line 157 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) / ((long) (b) ) )) );
	}
	
	
	public static long divInt(long a, int b)
	{
		//line 160 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) / b )) );
	}
	
	
	public static long intDiv(int a, long b)
	{
		//line 163 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( a / ((long) (b) ) )) );
	}
	
	
	public static long mod(long a, long b)
	{
		//line 166 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) % ((long) (b) ) )) );
	}
	
	
	public static long modInt(long a, int b)
	{
		//line 169 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) % b )) );
	}
	
	
	public static long intMod(int a, long b)
	{
		//line 172 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( a % ((long) (b) ) )) );
	}
	
	
	public static boolean eq(long a, long b)
	{
		//line 175 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( ((long) (a) ) == ((long) (b) ) );
	}
	
	
	public static boolean eqInt(long a, int b)
	{
		//line 178 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( ((long) (a) ) == b );
	}
	
	
	public static boolean neq(long a, long b)
	{
		//line 181 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( ((long) (a) ) != ((long) (b) ) );
	}
	
	
	public static boolean neqInt(long a, int b)
	{
		//line 184 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ( ((long) (a) ) != b );
	}
	
	
	public static boolean lt(long a, long b)
	{
		//line 187 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) < ((long) (b) ) )) ));
	}
	
	
	public static boolean ltInt(long a, int b)
	{
		//line 190 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) < b )) ));
	}
	
	
	public static boolean intLt(int a, long b)
	{
		//line 193 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( a < ((long) (b) ) )) ));
	}
	
	
	public static boolean lte(long a, long b)
	{
		//line 196 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) <= ((long) (b) ) )) ));
	}
	
	
	public static boolean lteInt(long a, int b)
	{
		//line 199 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) <= b )) ));
	}
	
	
	public static boolean intLte(int a, long b)
	{
		//line 202 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( a <= ((long) (b) ) )) ));
	}
	
	
	public static boolean gt(long a, long b)
	{
		//line 205 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) > ((long) (b) ) )) ));
	}
	
	
	public static boolean gtInt(long a, int b)
	{
		//line 208 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) > b )) ));
	}
	
	
	public static boolean intGt(int a, long b)
	{
		//line 211 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( a > ((long) (b) ) )) ));
	}
	
	
	public static boolean gte(long a, long b)
	{
		//line 214 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) >= ((long) (b) ) )) ));
	}
	
	
	public static boolean gteInt(long a, int b)
	{
		//line 217 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (a) ) >= b )) ));
	}
	
	
	public static boolean intGte(int a, long b)
	{
		//line 220 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (( a >= ((long) (b) ) )) ));
	}
	
	
	public static long complement(long x)
	{
		//line 223 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return  ~ (((long) (x) )) ;
	}
	
	
	public static long and(long a, long b)
	{
		//line 226 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) & ((long) (b) ) )) );
	}
	
	
	public static long or(long a, long b)
	{
		//line 229 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) | ((long) (b) ) )) );
	}
	
	
	public static long xor(long a, long b)
	{
		//line 232 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) ^ ((long) (b) ) )) );
	}
	
	
	public static long shl(long a, int b)
	{
		//line 235 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) << b )) );
	}
	
	
	public static long shr(long a, int b)
	{
		//line 238 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) >> b )) );
	}
	
	
	public static long ushr(long a, int b)
	{
		//line 241 "/home/travis/haxe/std/java/_std/haxe/Int64.hx"
		return ((long) (( ((long) (a) ) >>> b )) );
	}
	
	
}


